# Starter pipeline
# trigger:
# - main

# pool: "Default"
pool:
  vmImage: ubuntu-latest

steps:

- task: Gradle@3
  inputs:
    gradleWrapperFile: 'gradlew'
    tasks: 'build'
    publishJUnitResults: true
    testResultsFiles: '**/TEST-*.xml'
    javaHomeOption: 'JDKVersion'
    jdkVersionOption: '1.11'
    sonarQubeRunAnalysis: false
    spotBugsAnalysis: false
  displayName: 'BUILD PROJECT GRADLE'

- task: SonarCloudPrepare@1
  inputs:
    SonarCloud: 'SonarCloudConnection'
    organization: 'ibanezstudio'
    projectKey: 'IbanezStudio_DevOps-foundation-v3'
    projectName: 'DevOps-foundation-v3'
  displayName: PREPARE SONARCLOUD SCANNER

- task: Gradle@3
  inputs:
    gradleWrapperFile: 'gradlew'
    tasks: 'sonarqube'
    publishJUnitResults: true
    testResultsFiles: '**/TEST-*.xml'
    javaHomeOption: 'JDKVersion'
    sonarQubeRunAnalysis: true
    sqGradlePluginVersionChoice: 'specify'
    sonarQubeGradlePluginVersion: '3.3'
    spotBugsAnalysis: false


- task: Docker@2
  inputs:
    containerRegistry: 'dockerConnection'
    command: 'login'
  displayName: DOCKER LOGIN

- task: Docker@2
  inputs:
    containerRegistry: 'dockerConnection'
    repository: 'estebanibannezp/spring-devops-image'
    command: 'build'
    Dockerfile: '**/Dockerfile'
    tags: 'latest'
  displayName: DOCKER BUILD IMAGE

- task: Docker@2
  inputs:
    containerRegistry: 'dockerConnection'
    repository: 'estebanibannezp/spring-devops-image'
    command: 'push'
    tags: 'latest'
  displayName: DOCKER PUSH IMAGE

- task: KubectlInstaller@0
  inputs:
    kubectlVersion: 'latest'

- task: Kubernetes@1
  inputs:
    connectionType: 'None'
    namespace: 'default'
    command: 'apply'
    arguments: '-f deployment-app.yaml'
    secretType: 'dockerRegistry'
    containerRegistryType: 'Azure Container Registry'